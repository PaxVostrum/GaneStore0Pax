@using GameStore0.FileServer.Interfaces;
@using Models;
@using TempServ;
@* @inject TempRepo tempRepo; *@
@inject IConfiguration config;
@inject IFileGetter fileGetter;
@inject IFileReader fileReader;


@page "/"

<PageTitle>Game Catalog</PageTitle>

<h1>Game Catalog:</h1>

@if (games is null)
{
   <p><em>Loading..</em></p>
}
else
{
   <table class="table table-striped table-striped table-hover">
      <thead class="table-dark">
          <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Price</th>
          </tr>
      </thead>
      <tbody>
         @foreach (var g in games.EnumerateAllGames())
         {
            <tr>
               <td>@g.Id</td>
               <td>@g.Name</td>
               <td>@g.Price</td>
               @* <td>@g.Genre</td>
                  <td>@g.ReleaseDate</td> *@
            </tr>
         }
      </tbody>
   </table>
}


@code {
    //IEnumerable<Game> games = new Game[]{};// TempRepo.GetTempGames();
    private GamesCollection? games;  // = new();

    protected override async Task OnInitializedAsync()
    {
        //TempFileRepo fileRepo = new(config, fileGetter, fileReader);
        TempRepo tempRepo = new();
        games = tempRepo.SetInitialGamesCollection(); //await fileRepo.ReadGamesFromFile(); //
    }
}