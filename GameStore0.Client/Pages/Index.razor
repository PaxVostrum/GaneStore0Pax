@using GameStore0.FileServer.Interfaces;
@page "/"
@inject HttpMemoryRepo _repo;

<PageTitle>Game Catalog</PageTitle>

<h1>Game Catalog:</h1>

<div class="row mb-4">
    <div class="col-sm-6">
        <a class="btn btn-secondary" href="/addGame">Add New</a>
    </div>
</div>

@if (games is null)
{
   <p><em>Loading..</em></p>
}
else
{
   <table class="table table-striped table-striped table-hover">
      <thead class="table-dark">
         <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Price</th>
            <th>Date</th>
            <th>Genre</th>
            <th></th>
         </tr>
      </thead>
      <tbody>
         @foreach (var g in games)
         {
            <tr>
               <td>@g.Id</td>
               <td>@g.Name</td>
               <td>@g.Price</td>
               <td>@g.ReleaseDate</td>
               <td>@g.Genre</td>
               <td> <a href="/editGame/@g.Id" class="btn btn-outline-dark">Edit</a></td>
            </tr>
         }
      </tbody>
   </table>


}


@code {
    IEnumerable<Game> games = new Game[]{};// TempRepo.GetTempGames();
    //private GamesCollection? games; // = new();

    protected override async Task OnInitializedAsync()
    {
        //TempFileRepo fileRepo = new(config, fileGetter, fileReader);
        games = await _repo.GetGames(); //TempRepo.GamesCollection; //GetInitialGamesCollection(); //await fileRepo.ReadGamesFromFile(); //


    }

}